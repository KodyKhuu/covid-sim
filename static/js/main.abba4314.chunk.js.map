{"version":3,"sources":["pictures/blue.png","pictures/bluemask.png","components/Healthy.js","pictures/red.png","pictures/redmask.png","components/Unhealthy.js","components/Map.js","pictures/bar.jpg","pictures/office.jpg","pictures/restaurant.jpg","pictures/gym.jpg","pictures/supermarket.jpg","pictures/cocoMall.png","App.js","CovidSimulator.js","reportWebVitals.js","index.js"],"names":["Healthy","x","y","mask","speed","angle","style","backgroundImage","Masked","Unmasked","backgroundSize","position","left","top","height","width","Unhealthy","Map","selected","mapSize","critters","setCritters","bg","useState","window","innerHeight","upperBound","setUpperBound","lowerBound","setLowerBound","innerWidth","leftBound","setLeftBound","rightBound","setRightBound","h","setH","w","setW","useEffect","handle","setInterval","updateCritters","checkResize","updateWindow","clearInterval","i","length","createCritter","collisionTimer","newCritters","Math","cos","sin","PI","j","abs","p1healthy","p2healthy","chance","random","console","log","maxHeight","maxWidth","border","bottom","right","margin","backgroundColor","onClick","e","clientX","clientY","concat","map","critter","App","currentSelection","setCurrentSelection","setMask","setMapSize","mapName","setMapName","Supermarket","m","setM","b","filter","c","r","className","disabled","type","name","onChange","for","max","min","defaultValue","step","value","target","Bar","Office","Restaurant","Gym","Mall","alignItems","backgroundRepeat","backgroundPosition","class","CovidSimulator","loading","setLoading","page","setPage","A","color","AB","setTimeout","crits","push","config","duration","from","opacity","to","props","size","fontSize","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abba4314.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blue.82399d0c.png\";","export default __webpack_public_path__ + \"static/media/bluemask.05ec17fe.png\";","import React from 'react';\r\nimport Unmasked from \"../pictures/blue.png\";\r\nimport Masked from \"../pictures/bluemask.png\"\r\n\r\nconst Healthy = ({x, y, speed, angle, mask}) => {\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url(${(mask === 1 ? Masked : Unmasked)})`,\r\n            backgroundSize: \"cover\",\r\n            position: 'fixed',\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            height: `${mask === -1 ? \"50px\" : \"40px\"}`,\r\n            width: `${mask === -1 ? \"50px\" : \"40px\"}`,\r\n        }}></div>\r\n    )\r\n}\r\nexport default Healthy","export default __webpack_public_path__ + \"static/media/red.c7621e1e.png\";","export default __webpack_public_path__ + \"static/media/redmask.ea681c40.png\";","import React from 'react';\r\nimport Unmasked from \"../pictures/red.png\";\r\nimport Masked from \"../pictures/redmask.png\"\r\n\r\nconst Unhealthy = ({x, y, speed, angle, mask}) => {\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url(${(mask === 1 ? Masked : Unmasked)})`,\r\n            backgroundSize: \"cover\",\r\n            position: 'fixed',\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n        }}></div>\r\n    )\r\n}\r\nexport default Unhealthy","import React, {useState, useEffect} from 'react'\r\nimport '../styles/Map.css'\r\nimport Healthy from './Healthy.js'\r\nimport Unhealthy from './Unhealthy.js'\r\n\r\nconst Map = ({selected, mask, mapSize, critters, setCritters, bg}) => {\r\n\r\n    const [upperBound, setUpperBound] = useState(window.innerHeight * (.50 - mapSize / 2));\r\n    const [lowerBound, setLowerBound] = useState(window.innerHeight * (.50 + mapSize / 2));\r\n    const [leftBound, setLeftBound] = useState(window.innerWidth * (.50 - mapSize / 2));\r\n    const [rightBound, setRightBound] = useState(window.innerWidth * (.50 + mapSize / 2));\r\n\r\n    const [h, setH] = useState(window.innerHeight)\r\n    const [w, setW] = useState(window.innerWidth)\r\n\r\n\r\n    useEffect(() => {\r\n        let handle = setInterval(updateCritters, 50);  \r\n        let checkResize = setInterval(updateWindow, 50);\r\n\r\n        return () => {\r\n          clearInterval(handle);\r\n          clearInterval(checkResize);\r\n        }\r\n      });\r\n\r\n    const updateWindow = () => {\r\n        if (window.innerHeight !== h || window.innerWidth !== w){\r\n            for (let i = 0 ; i < critters.length ; i++){\r\n                critters[i].x = (critters[i].x / w) * window.innerWidth\r\n                critters[i].y = (critters[i].y / h) * window.innerHeight\r\n            }\r\n            setH(window.innerHeight)\r\n            setW(window.innerWidth)\r\n        }\r\n        setUpperBound(window.innerHeight * (.50 - mapSize / 2))\r\n        setLowerBound(window.innerHeight * (.50 + mapSize / 2))\r\n        setLeftBound(window.innerWidth * (.50 - mapSize / 2))\r\n        setRightBound(window.innerWidth * (.50 + mapSize / 2))\r\n    }\r\n\r\n    const createCritter = (x, y, speed, angle) => {\r\n        return {\r\n            x,\r\n            y,\r\n            speed,\r\n            angle,\r\n            selected,\r\n            mask,\r\n            collisionTimer: 0\r\n        }\r\n    }\r\n\r\n    const updateCritters = () => {\r\n        let newCritters = [...critters]\r\n        for (let i = 0; i < newCritters.length; i++) {\r\n            newCritters[i].x += newCritters[i].speed * Math.cos(newCritters[i].angle)\r\n            newCritters[i].y += newCritters[i].speed * Math.sin(newCritters[i].angle)\r\n\r\n            if (newCritters[i].x + 10 < leftBound){\r\n                newCritters[i].angle = 2 * Math.PI/2 - newCritters[i].angle\r\n            }\r\n            else if (newCritters[i].x + 45 > rightBound){\r\n                newCritters[i].angle = 2 * Math.PI/2 - newCritters[i].angle\r\n            }\r\n            else if (newCritters[i].y + 15 < upperBound) {\r\n                newCritters[i].angle = -newCritters[i].angle\r\n            }\r\n            \r\n            else if (newCritters[i].y + 45 > lowerBound) {\r\n                newCritters[i].angle = -newCritters[i].angle\r\n            }\r\n\r\n            for (let j = 0; j < newCritters.length; j++) {\r\n                if (j === i) {\r\n                    continue;\r\n                }\r\n                if (Math.abs(newCritters[i].x - newCritters[j].x) < 15 && Math.abs(newCritters[i].y - newCritters[j].y) < 15){\r\n                    if(!(newCritters[i].selected === \"Healthy\" && newCritters[j].selected === \"Healthy\")){\r\n                        // let p1mask = (newCritters[i].mask === 1 ? true : false)\r\n                        // let p2mask = (newCritters[j].mask === 1 ? true : false)\r\n                        let p1healthy = (newCritters[i].selected === \"Healthy\" ? true : false)\r\n                        let p2healthy = (newCritters[j].selected === \"Healthy\" ? true : false)\r\n\r\n                        let chance = 1\r\n\r\n                        if (!p1healthy && !p2healthy){\r\n                            //Nothing. They are both sick\r\n                        }\r\n                        // If Person 1 is sick\r\n                        else if (!p1healthy && p2healthy){\r\n                            if (newCritters[i].mask === 1 && newCritters[j].mask === 1){\r\n                                chance = 0.015\r\n                            }\r\n                            else if (newCritters[i].mask === 1 && newCritters[j].mask === -1) {\r\n                                chance = 0.05\r\n                            }\r\n                            else if (newCritters[i].mask === -1 && newCritters[j].mask === 1){\r\n                                chance = 0.70\r\n                            }\r\n                        }\r\n                        // If Person 2 is sick\r\n                        else if (p1healthy && !p2healthy){\r\n                            if (newCritters[j].mask === 1 && newCritters[i].mask === 1){\r\n                                chance = 0.015\r\n                            }\r\n                            else if (newCritters[j].mask === 1 && newCritters[i].mask === -1) {\r\n                                chance = 0.05\r\n                            }\r\n                            else if (newCritters[j].mask === -1 && newCritters[i].mask === 1){\r\n                                chance = 0.70\r\n                            }\r\n                        }\r\n\r\n                        if (Math.random() < chance) {\r\n                            console.log(newCritters[i].collisionTimer)\r\n                            console.log(newCritters[j].collisionTimer)\r\n                            if (newCritters[i].collisionTimer === 0){\r\n                                console.log(chance)\r\n                                newCritters[i].selected = \"Unhealthy\"\r\n                                newCritters[i].collisionTimer = 20\r\n                            }\r\n                            if (newCritters[j].collisionTimer === 0){\r\n                                console.log(chance)\r\n                                newCritters[j].selected = \"Unhealthy\"\r\n                                newCritters[j].collisionTimer = 20\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // If timer is 0\r\n                if (newCritters[i].collisionTimer > 0){\r\n                    newCritters[i].collisionTimer -= 1\r\n                }\r\n            }\r\n        }\r\n        setCritters(newCritters)\r\n        \r\n    }\r\n\r\n    function spawnItem (e) {\r\n\r\n        let newCritters = []\r\n\r\n        if(e.clientX < leftBound + 30){\r\n            if(e.clientY < upperBound + 30){\r\n\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX, e.clientY + 15,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            }\r\n            else if (e.clientY > lowerBound - 30){\r\n\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX, e.clientY - 50,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            } else {\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX, e.clientY - 15,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            }\r\n\r\n        }\r\n\r\n        else if(e.clientX > rightBound - 30){\r\n            if(e.clientY < upperBound + 30){\r\n\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX - 60, e.clientY + 15,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            }\r\n            else if (e.clientY > lowerBound - 30){\r\n\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX - 60, e.clientY - 50,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            } else {\r\n                newCritters = critters.concat(\r\n                    createCritter(e.clientX - 60, e.clientY - 15,\r\n                                Math.random() * 5,\r\n                                2 * Math.PI * Math.random()))\r\n            }\r\n        }\r\n\r\n        else if(e.clientX < leftBound + 30 || e.clientY < upperBound + 30){\r\n            newCritters = critters.concat(\r\n                createCritter(e.clientX - 25, e.clientY,\r\n                            Math.random() * 5,\r\n                            2 * Math.PI * Math.random()))\r\n            \r\n            \r\n        } else if (e.clientX > rightBound - 30 || e.clientY > lowerBound - 30) {\r\n\r\n            newCritters = critters.concat(\r\n                createCritter(e.clientX - 25, e.clientY - 50,\r\n                            Math.random() * 5,\r\n                            2 * Math.PI * Math.random()))\r\n        } else {\r\n            newCritters = critters.concat(\r\n                createCritter(e.clientX - 25, e.clientY - 25,\r\n                            Math.random() * 5,\r\n                            2 * Math.PI * Math.random()))\r\n        }\r\n\r\n        setCritters(newCritters)\r\n\r\n    }\r\n\r\n    const renderCritters = () => {\r\n        return critters.map((critter) => (\r\n            critter.selected === \"Healthy\" \r\n            ? (<Healthy x={critter.x} y={critter.y} speed={critter.speed} angle={critter.angle} mask={critter.mask} />)\r\n            : (<Unhealthy x={critter.x} y={critter.y} speed={critter.speed} angle={critter.angle} mask={critter.mask}/>)\r\n          ))\r\n    }\r\n\r\n    const style = {\r\n        height: `${mapSize*100}%`,\r\n        width: `${mapSize*100}%`,\r\n        maxHeight: 'inherit',\r\n        maxWidth: 'inherit',\r\n        position: \"absolute\",\r\n        border: \"3px solid black\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: `${bg}`\r\n    }\r\n\r\n    return (\r\n        <div style={style} onClick={spawnItem}>{renderCritters()}</div>\r\n    )\r\n}\r\n\r\nexport default Map","export default __webpack_public_path__ + \"static/media/bar.296e27e0.jpg\";","export default __webpack_public_path__ + \"static/media/office.c260f996.jpg\";","export default __webpack_public_path__ + \"static/media/restaurant.7ece7ff5.jpg\";","export default __webpack_public_path__ + \"static/media/gym.75d795e8.jpg\";","export default __webpack_public_path__ + \"static/media/supermarket.b0d40a97.jpg\";","export default __webpack_public_path__ + \"static/media/cocoMall.aad5d667.png\";","import './App.css';\nimport React, {useState} from 'react';\nimport Map from './components/Map';\n\nimport Bar from './pictures/bar.jpg'\nimport Office from './pictures/office.jpg'\nimport Restaurant from './pictures/restaurant.jpg'\nimport Gym from './pictures/gym.jpg'\nimport Supermarket from './pictures/supermarket.jpg'\nimport Mall from './pictures/cocoMall.png'\n\nfunction App() {\n  const [currentSelection,setCurrentSelection] = useState(\"Healthy\");\n  const [mask, setMask] = useState(-1)\n  const [mapSize, setMapSize] = useState(.50)\n\n  const [critters, setCritters] = useState([])\n\n  const [mapName, setMapName] = useState(\"Supermarket\")\n  const [m,setM] = useState(Supermarket)\n\n  const handleCheckClick = () => {\n    setMask(mask * -1)\n  }\n\n  const getMapType = (value) => {\n    if(value < .2){\n      setMapName(\"Bar\")\n      setM(Bar)\n    }\n    else if(.2 <= value && value < .3){\n      setMapName(\"Office\")\n      setM(Office)\n    }\n    else if(.3 <= value && value < .4){\n      setMapName(\"Restaurant\")\n      setM(Restaurant)\n    }\n    else if(.4 <= value && value < .5){\n      setMapName(\"Gym\")\n      setM(Gym)\n    }\n    else if(.5 <= value && value < .6){\n      setMapName(\"Supermarket\")\n      setM(Supermarket)\n    }\n    else if(.6 <= value && value < .8){\n      setMapName(\"Mall\")\n      setM(Mall)\n    }\n  }\n\n  const b = [...critters].filter(c => c.selected === \"Healthy\").length\n  const r = [...critters].filter(c => c.selected === \"Unhealthy\").length\n\n  return (\n    <div className=\"App\">\n      <div className=\"topBar\">\n\n        <div className=\"buttons\">\n          <button disabled={currentSelection === \"Healthy\"} onClick={() => setCurrentSelection(\"Healthy\")}>Healthy</button>\n          <button disabled={currentSelection === \"Unhealthy\"} onClick={() => setCurrentSelection(\"Unhealthy\")}>Unhealthy</button>\n          <button onClick={() => setCritters([])}>Reset</button>\n        </div>\n\n        <div className=\"maskSelection\">\n          <input type=\"checkbox\" name=\"mask\" onChange={handleCheckClick}/>\n          <label for=\"mask\">Mask</label>\n        </div>\n        \n        <p className=\"middle\">{mapName} </p> \n\n        <p className=\"stats\">Population: {critters.length}</p>    \n        <div className=\"scroller\">\n          <input\n            name=\"size\"\n            type=\"range\"\n            max=\".80\"\n            min=\".15\"\n            defaultValue=\".50\"\n            step=\".01\"\n            disabled={critters.length !== 0}\n            onChange={(e) =>{\n              setMapSize(e.target.value)\n              getMapType(e.target.value)\n            }\n            }\n          /> \n          <p style={{alignItems: \"center\"}}>Map size: {mapSize}</p>            \n        </div>        \n         \n      </div>\n\n      <div style={{backgroundImage: `url(${m})`, backgroundSize: \"cover\", backgroundRepeat:\"no-repeat\", backgroundPosition:\"center center\", height:\"80vh\", width: \"100%\"}} className=\"playground\">\n        <Map selected={currentSelection} mask={mask} mapSize={mapSize} critters={critters} setCritters={setCritters} bg={\"#b3b3b394\"}/>\n      </div>\n      <div class=\"bottomBar\">\n      <div style={{width: `${(critters.length === 0 ? 100 : (b/critters.length) * 100)}%`, height: \"100%\", backgroundColor: \"#2edce8\"}}>{b}</div>\n      <div style={{width: `${(critters.length === 0 ? 0 : (r/critters.length) * 100)}%`, height: \"100%\", backgroundColor: \"#db1d00\"}}>{r}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React, {useState, useEffect} from 'react';\r\nimport './styles/covid-sim.css'\r\nimport App from './App'\r\nimport Map from './components/Map'\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport {Spring} from 'react-spring/renderprops'\r\n\r\nfunction CovidSimulator() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [critters, setCritters] = useState([]);\r\n\r\n    const A = <span style={{color:\"red\"}}>A</span>\r\n    const AB = <span style={{color:\"blue\"}}>A</span>\r\n\r\n    const createCritter = (x, y, speed, angle) => {\r\n        return {\r\n            x,\r\n            y,\r\n            speed,\r\n            angle,\r\n            selected: \"Healthy\",\r\n            mask: 1,\r\n            collisionTimer: 0\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n          setLoading(false)\r\n          let crits = []\r\n          for (let i = 0; i < 30; i++){\r\n                console.log(i)\r\n                crits.push(createCritter((Math.random() * (window.innerWidth - 50)), (\r\n                                            Math.random() * (window.innerHeight - 50)),\r\n                                            Math.random() * 5,\r\n                                            2 * Math.PI * Math.random()))\r\n          }\r\n          console.log(crits)\r\n          setCritters(crits)\r\n        }, 2000)\r\n      }, [])\r\n\r\n    return (\r\n        <div className=\"covidsim\">\r\n            {loading ?\r\n              <Spring config={{duration: 2000}} from={{opacity: 0.25}} to={{opacity: 1}}>\r\n              {props => (\r\n                <div style={props} class=\"loadingscreen\">\r\n                  <div>\r\n                    <PulseLoader\r\n                        size={75}\r\n                        margin={64}\r\n                        color={\"rgba(39, 70, 144)\"}\r\n                        loading={loading}\r\n                    />\r\n                  </div>\r\n                  <div style={{color: 'white', fontSize: '48px', textAlign: \"center\"}}>SC{AB}NNING FOR M{A}SKS</div>\r\n                </div>\r\n              )}\r\n            </Spring>\r\n             : \r\n                <div className=\"covidsim\">\r\n                    {page === 0 \r\n                    ?\r\n                    <div>\r\n                        <div className=\"overlaySectionHeader\"><p>COVID-19 SIMUL{A}TOR</p></div>\r\n                        <div className=\"overlaySectionOne\">\r\n                            <p>\r\n                                Wearing a M{A}SK is very important. Without one, you are more susceptible to catching COVID.\r\n                                With rates growing rapidly, we need to be mindful for the people around us, and help slow down that rate.\r\n                                Did you know that if you have COVID, the chances of someone catching it from you is over 70%!\r\n                                Let's all be mindful and continue to wear a M{AB}SK when out in public!\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"overlaySectionTwo\">\r\n                            <p>\r\n                                Spawn HE{AB}LTHY (blue) and UNHE{A}LTHY (red) crewmates with or without masks to see how a virus spreads! \r\n                                <br/><br/>Note: The map must be empty in order to change map size. Use the reset button to clear the map.\r\n                            </p>\r\n                        </div>\r\n                        <button onClick={() => setPage(1)} className=\"overlayButton\">START</button>\r\n\r\n                        <Map selected={\"Unhealthy\"} mask={1} mapSize={1} critters={critters} setCritters={setCritters} bg={\"rgba(0, 0, 0, 0)\"} \r\n                             className=\"background\"/>\r\n                    </div>\r\n                    :\r\n                    <Spring\r\n                        config={{duration: 2000}}\r\n                        from={{opacity: 0}}\r\n                        to={{opacity: 1}}>\r\n                        {props => (\r\n                            <div style={props}>\r\n                                <App/>\r\n                            </div>\r\n                        )}\r\n                    </Spring>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CovidSimulator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport CovidSimulator from './CovidSimulator';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CovidSimulator />\n    {/* <App /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();"],"sourceRoot":""}